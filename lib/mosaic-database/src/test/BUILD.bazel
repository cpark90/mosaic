package(default_visibility = ["//visibility:public"])

# persistence unit test

java_test(
    name = "sqlite_access_test",
    srcs = glob(["java/**/database/persistence/SQLiteAccessTest.java"]),
    resources = glob(["resources/**/*"]),
    deps = [
        "@maven//:junit_junit",

        "//lib/mosaic-database",
        "//lib/mosaic-utils/src/test:junit",
    ],
    test_class = "org.eclipse.mosaic.lib.database.persistence.SQLiteAccessTest",
)

java_test(
    name = "sqlite_reader_test",
    srcs = glob(["java/**/database/persistence/SQLiteReaderTest.java"]),
    resources = glob(["resources/**/*"]),
    deps = [
        "@maven//:junit_junit",

        "//lib/mosaic-database",
        "//lib/mosaic-utils/src/test:junit",
    ],
    test_class = "org.eclipse.mosaic.lib.database.persistence.SQLiteReaderTest",
)

# road unit test

java_test(
    name = "connection_test",
    srcs = glob(["java/**/database/road/ConnectionTest.java"]),
    resources = glob(["resources/**/*"]),
    deps = [
        "@maven//:junit_junit",

        "//lib/mosaic-database",
        "//lib/mosaic-geomath",
    ],
    test_class = "org.eclipse.mosaic.lib.database.road.ConnectionTest",
)

java_test(
    name = "node_test",
    srcs = glob(["java/**/database/road/NodeTest.java"]),
    resources = glob(["resources/**/*"]),
    deps = [
        "@maven//:junit_junit",

        "//lib/mosaic-database",
        "//lib/mosaic-geomath",
    ],
    test_class = "org.eclipse.mosaic.lib.database.road.NodeTest",
)

java_test(
    name = "restriction_test",
    srcs = glob(["java/**/database/road/RestrictionTest.java"]),
    resources = glob(["resources/**/*"]),
    deps = [
        "@maven//:junit_junit",

        "//lib/mosaic-database",
        "//lib/mosaic-geomath",
    ],
    test_class = "org.eclipse.mosaic.lib.database.road.RestrictionTest",
)

java_test(
    name = "roundabout_test",
    srcs = glob(["java/**/database/road/RoundaboutTest.java"]),
    resources = glob(["resources/**/*"]),
    deps = [
        "@maven//:junit_junit",

        "//lib/mosaic-database",
        "//lib/mosaic-geomath",
    ],
    test_class = "org.eclipse.mosaic.lib.database.road.RoundaboutTest",
)

java_test(
    name = "way_test",
    srcs = glob(["java/**/database/road/WayTest.java"]),
    resources = glob(["resources/**/*"]),
    deps = [
        "@maven//:junit_junit",

        "//lib/mosaic-database",
        "//lib/mosaic-geomath",
    ],
    test_class = "org.eclipse.mosaic.lib.database.road.WayTest",
)

# route unit test

java_test(
    name = "route_test",
    srcs = glob(["java/**/database/route/RouteTest.java"]),
    resources = glob(["resources/**/*"]),
    deps = [
        "@maven//:junit_junit",

        "//lib/mosaic-database",
        "//lib/mosaic-geomath",
    ],
    test_class = "org.eclipse.mosaic.lib.database.route.RouteTest",
)

# spatial unit test

java_test(
    name = "edge_finder_test",
    srcs = glob(["java/**/database/spatial/EdgeFinderTest.java"]),
    resources = glob(["resources/**/*"]),
    deps = [
        "@maven//:junit_junit",

        "//lib/mosaic-database",
        "//lib/mosaic-geomath",
        "//lib/mosaic-utils/src/test:junit",
        "//lib/mosaic-geomath/src/test:junit",
    ],
    test_class = "org.eclipse.mosaic.lib.database.spatial.EdgeFinderTest",
)

java_test(
    name = "node_finder_test",
    srcs = glob(["java/**/database/spatial/NodeFinderTest.java"]),
    resources = glob(["resources/**/*"]),
    deps = [
        "@maven//:junit_junit",

        "//lib/mosaic-database",
        "//lib/mosaic-geomath",
        "//lib/mosaic-utils/src/test:junit",
        "//lib/mosaic-geomath/src/test:junit",
    ],
    test_class = "org.eclipse.mosaic.lib.database.spatial.NodeFinderTest",
)

# database unit test

java_test(
    name = "database_test",
    srcs = glob(["java/**/database/DatabaseTest.java"]),
    resources = glob(["resources/**/*"]),
    deps = [
        "@maven//:junit_junit",

        "//lib/mosaic-database",
        "//lib/mosaic-geomath",
    ],
    test_class = "org.eclipse.mosaic.lib.database.DatabaseTest",
)